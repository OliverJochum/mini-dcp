name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'flightsearch-app/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'flightsearch-app/**'
      - '.github/workflows/ci.yml'
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [flightsearch-app]
    defaults:
      run:
        working-directory: ./${{ matrix.service }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Setup Gradle and Validate Wrapper
        uses: gradle/actions/setup-gradle@v4
      - name: Install & Build
        run: ./gradlew clean build
      - name: Run tests
        run: ./gradlew test
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [flightsearch-app]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Run Spotless Check
        run: |
          cd ${{ matrix.service }}
          ./gradlew spotlessCheck
      - name: Setup Gradle and Validate Wrapper
        uses: gradle/actions/setup-gradle@v4
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.service }}:${{ github.run_id }}.${{ github.run_attempt }}
  patch-deployment:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Patch kustomization.yaml with new image tag
        run: |
          cd gitops
          sed -i "s|newTag: .*|newTag: ${{ github.run_id }}.${{ github.run_attempt }}|g" kustomization.yaml
      - name: Commit and Push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add gitops/kustomization.yaml
          git commit -m "Update image tag to ${{ github.run_id }}.${{ github.run_attempt }}" || echo "No changes to commit"
          git push
